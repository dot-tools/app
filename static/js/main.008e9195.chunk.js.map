{"version":3,"sources":["widget/nav.tsx","widget/search.tsx","utils/url.ts","widget/main_wap.tsx","net/api.ts","net/http_server.ts","provider/backdrop_provider.tsx","utils/wait_fn.ts","view/list.tsx","view/fn/projects.ts","view/main.tsx","view/main_inner.tsx","view/fn/get_project.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DrawerWidget","careList","Divider","List","name","map","ev","StyledLink","to","styled","ListItem","NavLink","HeaderWidget","useContext","MainContext","tagList","tag","setTag","GridStyle","container","alignItems","Grid","item","md","sm","xs","Tags","onClick","className","ul","UseUrlData","useState","data","setData","location","useLocation","useMemo","JSON","parse","URLSearchParams","search","get","UrlHerf","this","MainWapWidget","model","slug","useParams","title","website","introduction","tags","id","MainWapStyle","stringify","setDara","src","alt","baseURL","axios","create","timeout","headers","transformRequest","transformResponse","interceptors","request","use","config","Promise","resolve","error","reject","response","status","code","result","url","params","baseUrl","post","put","patch","delete","HttpServer","NetAxios","skip","cate","account","HttpStatus","BackdropProvider","children","isOpen","setIsOpen","handleDismiss","useCallback","handlePresent","BackdropContext","Provider","value","onPresent","onDismiss","BackdropStyle","open","CircularProgress","color","createContext","Backdrop","useWait","backFn","start","setStatus","a","wait","success","err","failure","ListWidget","users","setProhibit","setUsers","prohibit","usersLength","setUsersLength","projects","fetchTag","init","req","length","allProjects","Math","ceil","_arrdata","i","push","slice","useProjects","useEffect","loadMore","setTimeout","clearTimeout","endReached","itemContent","index","user","_itemDat","MainStyle","spacing","components","Footer","style","padding","display","justifyContent","MainWidget","appBar","handleDrawerToggle","menuButton","setTagList","allTags","WapStyle","Hidden","smUp","implementation","AppBar","Toolbar","Typography","variant","noWrap","IconButton","aria-label","edge","height","BoxStyle","div","MainInnerWidget","setModel","fetchProject","getProject","_data","useGetProject","getData","justify","description","href","twitter","telegram","github","job","MaxWidget","img","HeaderStyle","css","drawerWidth","useStyles","makeStyles","theme","createStyles","root","drawer","breakpoints","up","width","flexShrink","marginLeft","toolbar","mixins","drawerPaper","backgroundColor","content","flexGrow","down","boxSizing","Page","props","classes","useTheme","React","mobileOpen","setMobileOpen","allCategories","initData","setInitData","handelInit","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","LogoStyle","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.008e9195.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {NavLink} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {CareModel} from \"../model/init_mode\";\n\nexport const DrawerWidget: React.FC<{careList:CareModel[]}> = ({careList}) => {\n\n    return (\n        <div>\n            <Divider/>\n            <List>\n                {\n                    [{name:\"All\"},...careList].map((ev) => {\n                        return (\n                            <StyledLink key={ev.name} to={'/' + ev.name}>{ev.name}</StyledLink>\n                        );\n                    })\n                }\n\n\n            </List>\n\n        </div>\n    );\n}\n\nconst ButtonItem = styled(ListItem)<{ac:boolean}>`\n \n`\n\n//    background-color: ${({ac})=> ac ? 'rgba(0,0,0,.1)':'transitions'};\nconst StyledLink = styled(NavLink)`\n  color: #19233c;\n  opacity: 0.6;\n  font-weight: 700;\n\n  padding: 15px 48px;\n  box-sizing: border-box;\n\n  display: block;\n\n  text-decoration: none;\n\n  position: relative;\n\n  &.active {\n    opacity: 1;\n    background-color:rgba(0,0,0,.1);\n    &:before {\n      content: '';\n      position: absolute;\n      left: 24px;\n      top: 0;\n      bottom: 0;\n      margin:  auto 0;\n      width: 8px;\n      height: 8px;\n      border-radius: 50%;\n      background: #000;\n    }\n  }\n\n\n  @media (max-width: 768px) {\n\n    font-size: 10px;\n\n  }\n`;\n","import React, {useContext, useState} from \"react\";\nimport {Grid, InputBase, Toolbar} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport styled from \"styled-components\";\nimport {TagModel} from \"../model/init_mode\";\nimport {MainContext} from \"../view/main\";\n\nexport const HeaderWidget: React.FC = () => {\n    const {tagList,tag,setTag,} = useContext(MainContext)\n    return (\n        <GridStyle container alignItems={\"center\"}>\n            {/*<SearchStyle item md={2} sm={12} xs={12}>*/}\n            {/*    <div className={'search'}>*/}\n            {/*        <SearchIcon/>*/}\n            {/*        <InputBase*/}\n            {/*            placeholder=\"Search…\"*/}\n            {/*            fullWidth={true}*/}\n            {/*            inputProps={{'aria-label': 'search'}}*/}\n            {/*        />*/}\n            {/*    </div>*/}\n            {/*</SearchStyle>*/}\n            <Grid item md={12} sm={12} xs={12}>\n                <Tags>\n                    <div>\n                        {\n                            [{name:\"All\"},...tagList].map((ev) => {\n                                return (\n                                    <li onClick={() => setTag(ev.name)} className={tag === ev.name ? 'ac' : ''}\n                                        key={ev.name+ 'x'}>{ev.name}</li>\n                                );\n                            })\n                        }\n                    </div>\n                </Tags>\n\n            </Grid>\n\n\n        </GridStyle>\n\n    );\n}\n\nconst GridStyle = styled(Grid)`\n//height: 64px;\n`\n\nconst Tags = styled.ul`\n  overflow-x: hidden;\n\n  div {\n    display: flex;\n    flex-wrap: wrap;\n\n    li {\n      padding: 5px 10px;\n      color: #000;\n      font-size: 12px;\n      cursor: pointer;\n\n      &.ac {\n        color: #e6007a;\n      }\n    }\n  }\n\n  @media (max-width: 600.95px) {\n    div {\n      overflow-x: auto;\n      flex-wrap: nowrap;\n      margin-top: 5px;\n    }\n  }\n\n`\n\nconst SearchStyle = styled(Grid)`\n  padding: 0 10px;\n  box-sizing: border-box;\n  .search {\n    border: 1px solid rgba(0, 0, 0, .18);\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    overflow-x: hidden;\n\n    .MuiSvgIcon-root {\n      color: #e6007a;\n    }\n\n    .MuiInputBase-root {\n      font-size: 14px;\n    }\n  }\n`\n","import {useLocation} from \"react-router-dom\";\nimport {Dispatch, SetStateAction, useMemo, useState} from \"react\";\nimport {CardCmodel} from \"../model/card_model\";\n\n\n\n\nexport function UseUrlData<S>():[S|undefined, Dispatch<SetStateAction<S | undefined>>]{\n    const [data,setData] = useState<S>();\n    const location = useLocation();\n    useMemo(()=>{\n        setData(JSON.parse(new URLSearchParams(location.search).get('data') || ''));\n    },[location.search]);\n\n\n    return [data,setData]\n}\n\n\nexport class UrlHerf{\n    static   data:CardCmodel;\n    static set setDara(ev:CardCmodel){\n        this.data = ev;\n    }\n    static get getData(){\n        return this.data;\n    }\n}\n","import React, {useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\nimport {NavLink, useParams} from \"react-router-dom\";\nimport {CardCmodel} from \"../model/card_model\";\nimport {UrlHerf} from \"../utils/url\";\n\nexport const MainWapWidget: React.FC<{model:CardCmodel}> = ({model}) => {\n    let  slug:any = useParams();\n    const {title,website,introduction,tags,id} = model;\n\n    return (\n        <MainWapStyle item md={4} sm={12} xs={12}>\n            <NavLink to={`/${slug.id}/aasd?data=${JSON.stringify({id:model.id})}`} onClick={()=>{\n                UrlHerf.setDara = model;\n            }}>\n                <div>\n                    <h2><span>{title}</span><img\n                        src={website}\n                        alt=\"\"/></h2>\n                    <h3>{introduction}</h3>\n                    <h4>\n                        {\n                            tags.map((ev)=><span key={ev.name+id}>{ev.name}</span>)\n                        }\n                    </h4>\n                </div>\n            </NavLink>\n\n\n        </MainWapStyle>\n    );\n}\n\n\nconst MainWapStyle = styled(Grid)`\n        a{\n          text-decoration: none;\n          display: block;\n          height: 100%;\n          margin-bottom: 20px;\n\n        }\n   div{\n     height: 100%;\n    padding: 10px;\n    background-color: white;\n    border-radius: 10px;\n     box-sizing: border-box;\n     display: flex;\n     flex-flow: column;\n     justify-content: space-between;\n    h2 {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n\n      span {\n        font-size: 22px;\n        color: #19233c;\n        flex: 1 1;\n      }\n\n      img {\n        display: block;\n        border-radius: 100%;\n        width: 40px;\n      }\n    }\n    h3{\n      margin-top: 8px;\n      width: 100%;\n      font-size: 15px;\n      font-weight: 400;\n      flex: 1;\n      color: #8b93a7;\n      min-height: 64px;\n      line-height: 22px;\n      overflow: hidden;\n      text-overflow: ellipsis; /* 文本溢出时显示省略号来代表被修剪的文本 */\n      display: -webkit-box; /* 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 */\n      -webkit-box-orient: vertical; /* 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 */\n      -webkit-line-clamp: 1; /* 文本需要显示多少行 */\n    }\n    h4{\n      span{\n        background: #eff3f8;\n        padding: 5px 10px;\n        font-size: 11px;\n        margin-right: 10px;\n        border-radius: 4px;\n        font-weight: 700;\n        display: inline-block;\n        margin-top: 10px;\n      }\n     \n    }\n  }\n  \n`\n","\n\nimport axios, {AxiosInstance} from 'axios';\n\n\n\nclass NetAxios {\n    private axios:AxiosInstance;\n    private baseURL:string;\n\n\n\n\n    constructor(baseURL:string){\n        this.baseURL = baseURL;\n        this.axios = axios.create({\n            timeout: 30000,\n            headers: {\n                 'Content-Type': 'application/json;charset=utf-8'\n            },\n            transformRequest: [\n                (data) => {\n                    return JSON.stringify(data);\n                }\n            ],\n            transformResponse: [\n                (data) => {\n                    return JSON.parse(data);\n                }\n            ]\n        });\n        this.interceptors();\n    }\n\n    /**\n     * 默认拦截器\n     */\n    interceptors() {\n        // 请求拦截器\n        this.axios.interceptors.request.use(\n            (config) => {\n                // if (localStorage.getItem('token')) {\n                //     config.headers.common['token'] = localStorage.getItem('token');\n                // }\n                return Promise.resolve(config);\n            },\n            (error) => {\n                return Promise.reject(error);\n            }\n        );\n\n        // 响应拦截器\n        this.axios.interceptors.response.use(\n            (response) => {\n                const { status, data } = response;\n                const {  code, result } = data;\n\n                if (status === 200 && code === 200) {\n                    return Promise.resolve(result);\n                }\n                // this.onPresent(React.createElement(AlertWidget, {text:'Server Error'}, null));\n                return Promise.reject(data);\n            },\n            (error) => {\n                // this.onPresent(React.createElement(AlertWidget, {text:'Server Error'}, null));\n\n                return Promise.reject(error);\n            }\n        );\n    }\n\n    get(url:string, params:any,baseUrl=true) {\n\n        return this.axios.get(`${baseUrl?this.baseURL:''}${url}`, { params: { ...params } })\n    }\n\n    post(url:string, data:any) {\n        return this.axios.post(`${this.baseURL}${url}`, data)\n    }\n\n    put(url:string, data:any) {\n        return this.axios.put(url, data)\n    }\n\n    patch(url:string, data:any) {\n        return this.axios.patch(url, data)\n    }\n\n    delete(url:string) {\n        return this.axios.delete(url)\n    }\n\n}\n\n\n// export default new NetAxios('https://tapi.nsure.network');\nexport default new NetAxios('https://admin.dot.tools/v1/');\n//  export default new NetAxios('http://localhost:3001/v1');\n","import NetAxios from './api'\n\n\n\nexport class HttpServer {\n    static account: string | null;\n\n\n    static init(): Promise<any> {\n        return NetAxios.get('/init', {});\n    }\n\n\n    static projects(data:{ skip:number, cate:string, tags?:string }): Promise<any> {\n        const {skip, cate, tags} = data;\n        return NetAxios.get('/projects', {skip, cate, tags});\n    }\n    static getProject(id:string,): Promise<any> {\n        return NetAxios.get('/get_project', {id});\n    }\n\n    static tag(cate:string): Promise<any> {\n\n        return NetAxios.get('/tag', {cate,});\n    }\n\n}\n","import React, {createContext, useCallback, useState} from \"react\";\nimport {Backdrop, CircularProgress} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\n\nexport const BackdropProvider:React.FC = ({children}) =>{\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleDismiss = useCallback(() => {\n        setIsOpen(false)\n    }, [ setIsOpen,]);\n\n    const handlePresent = useCallback(() => {\n        setIsOpen(true)\n    }, [ setIsOpen,]);\n\n    return (\n        <BackdropContext.Provider value={{isOpen,onPresent:handlePresent,onDismiss:handleDismiss}}>\n            <BackdropStyle className={\"Backdrop\"} open={isOpen} onClick={handleDismiss}>\n                <CircularProgress color=\"primary\" />\n            </BackdropStyle>\n            {children}\n        </BackdropContext.Provider>\n    );\n}\n\nexport const  BackdropContext = createContext<BackdropInterface>({\n    onPresent: () => {\n    },\n    onDismiss: () => {\n    },\n    isOpen:false\n});\n\ninterface BackdropInterface{\n    isOpen:boolean,\n    onPresent: () => void,\n    onDismiss: () => void\n}\n\n\nconst BackdropStyle = styled(Backdrop)`\n  &.MuiBackdrop-root{\n    z-index: 10000;\n\n  }\n`\n","import {useCallback, useContext, useState} from \"react\";\nimport {BackdropContext} from \"../provider/backdrop_provider\";\n\n\nexport const useWait = (backFn:Function)=>{\n    const [status,setStatus] = useState<HttpStatus>(HttpStatus.start);\n    const [data,setData] = useState<any>();\n    const {onPresent, onDismiss} = useContext(BackdropContext);\n\n\n    const request = useCallback(async (ev?:any):Promise<any> => {\n        onPresent();\n        try {\n            setStatus(HttpStatus.wait);\n            let data = await backFn(ev);\n            setStatus(HttpStatus.success);\n            setData(data);\n            onDismiss();\n\n            return data;\n        }catch (e) {\n            setData({err:e});\n            setStatus(HttpStatus.failure);\n            onDismiss();\n        }\n\n\n    },[setStatus,setData]);\n\n    return {\n        status,\n        request,\n        data\n    };\n}\n\n\nexport enum HttpStatus{\n    start,\n    wait,\n    success,\n    failure\n}\n","import React, {useCallback, useContext, useEffect, useState} from \"react\";\nimport {Virtuoso} from \"react-virtuoso\";\nimport styled from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\nimport {MainWapWidget} from \"../widget/main_wap\";\nimport {useParams} from \"react-router-dom\";\nimport {MainContext} from \"./main\";\nimport {HttpServer} from \"../net/http_server\";\nimport {CardCmodel} from \"../model/card_model\";\nimport {ItemProps} from \"react-virtuoso/dist/interfaces\";\nimport {useProjects} from \"./fn/projects\";\n\n\nexport const ListWidget = () => {\n\n    let slug: any = useParams();\n    const {tag, users,setProhibit} = useContext(MainContext)\n\n    const {fetchTag, setUsersLength} = useProjects();\n    useEffect(() => {\n\n        setProhibit(false);\n        fetchTag(true);\n    }, [tag, slug.id]);\n\n\n    const loadMore = useCallback(() => {\n\n        return setTimeout(() => {\n            fetchTag(false);\n        }, 200)\n    }, [users])\n\n\n    useEffect(() => {\n        const timeout = loadMore()\n        return () => clearTimeout(timeout)\n    }, [])\n\n    return (\n\n        <Virtuoso\n\n            data={users}\n            endReached={loadMore}\n\n            itemContent={(index: any, user: any) => {\n                let _itemDat: CardCmodel[] = user;\n                return (<MainStyle container spacing={4}>\n                    {\n                        _itemDat.map((ev) => {\n                            return <MainWapWidget key={ev.id} model={ev}/>;\n                        })\n                    }\n                </MainStyle>)\n            }}\n\n            components={{\n\n\n                Footer: () => {\n                    return (\n                        <div\n                            style={{\n                                padding: '2rem',\n                                display: 'flex',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            Loading...\n                        </div>\n                    )\n                }\n            }}\n        />\n\n    )\n}\n\n\nconst MainStyle = styled(Grid)`\n\n\n`\n","import {useCallback, useContext, useState} from \"react\";\nimport {HttpServer} from \"../../net/http_server\";\nimport {MainContext} from \"../main\";\nimport {CardCmodel} from \"../../model/card_model\";\nimport {useParams} from \"react-router-dom\";\nimport {useWait} from \"../../utils/wait_fn\";\n\nexport const useProjects = () => {\n    let slug: any = useParams();\n    const {tag,users,setUsers,prohibit,setProhibit} = useContext(MainContext)\n\n    const [usersLength, setUsersLength] = useState(0);\n    const {request} = useWait(HttpServer.projects);\n    const fetchTag = useCallback(async (init:boolean) => {\n        let data;\n\n        if(prohibit && !init){\n            return;\n        }\n        let req = {\n            skip:init?0:users.length, cate:slug.id, tags:tag\n        };\n        if(init){\n            data = await request(req);\n        } else{\n            data = await HttpServer.projects(req);\n        }\n        if(data.allProjects.length < 21){\n            setProhibit(true);\n        }\n\n        setUsersLength(init?data.allProjects.length:usersLength + data.allProjects.length);\n\n        let length = Math.ceil(data.allProjects.length / 3);\n        let _arrdata: any = [];\n        for (let i = 0; i < length; i++) {\n            _arrdata.push(data.allProjects.slice(i * 3, i * 3 + 3))\n        }\n        setUsers(init?_arrdata:[...users, ..._arrdata]);\n\n    }, [slug.id, tag, usersLength,users])\n    return {fetchTag,users,usersLength,setUsersLength,setUsers};\n}\n","import React, {createContext, useCallback, useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {createStyles, fade, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Grid, InputBase, Toolbar} from \"@material-ui/core\";\nimport {HeaderWidget} from \"../widget/search\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {MainWapWidget} from \"../widget/main_wap\";\nimport {useParams} from \"react-router-dom\";\nimport {ListWidget} from \"./list\";\nimport {HttpServer} from \"../net/http_server\";\nimport {InitModel, TagModel} from \"../model/init_mode\";\nimport {CardCmodel} from \"../model/card_model\";\n\nexport const MainWidget: React.FC<{ appBar: any, handleDrawerToggle: any, menuButton: any }> = ({\n                                                                                                    appBar,\n                                                                                                    handleDrawerToggle,\n                                                                                                    menuButton\n                                                                                                }) => {\n    let slug: any = useParams();\n\n\n    const [tagList, setTagList] = useState<TagModel[]>([]);\n    const [tag, setTag] = useState('All');\n    const [prohibit, setProhibit] = useState(false);\n    const fetchTag = useCallback(async () => {\n        let data = await HttpServer.tag(slug.id);\n        if (data && data.allTags){\n            setTagList(data.allTags);\n        }\n    }, [slug.id])\n\n    const [users, setUsers] = useState<CardCmodel[]>([]);\n\n    useEffect(() => {\n        fetchTag();\n    }, [slug.id]);\n\n\n    return (\n      <MainContext.Provider value={{\n          tag,\n          setTag,\n          users,\n          setUsers,\n          tagList,\n          prohibit,\n          setProhibit\n      }}>\n          <WapStyle>\n              <div className={'top'}>\n                  <Hidden smUp implementation=\"css\">\n                      <AppBar className={appBar}>\n                          <Toolbar style={{justifyContent: 'space-between'}}>\n\n                              <Typography variant=\"h6\" noWrap>\n                                  Dot.Tools\n                              </Typography>\n                              <IconButton\n                                  color=\"inherit\"\n                                  aria-label=\"open drawer\"\n                                  edge=\"start\"\n                                  onClick={handleDrawerToggle}\n                                  className={menuButton}\n                              ><MenuIcon/>\n                              </IconButton>\n                          </Toolbar>\n                      </AppBar>\n                  </Hidden>\n                  <div style={{height: '15px'}}/>\n                  <HeaderWidget />\n              </div>\n              <Divider/>\n\n              <BoxStyle>\n                  <ListWidget/>\n              </BoxStyle>\n\n          </WapStyle>\n      </MainContext.Provider>\n    );\n}\n\nexport const  MainContext = createContext<MainInterface>({\n    setTag: () => null,\n    setUsers: () => null,\n    tag:\"All\",\n    tagList:[],\n    users:[],\n    setProhibit:() => null,\n    prohibit:false,\n});\n\ninterface MainInterface{\n    tag:string,\n    setTag: Function,\n    tagList:TagModel[],\n    users:CardCmodel[],\n    setUsers:Function,\n    prohibit:boolean,\n    setProhibit:Function\n}\n\n\nconst WapStyle = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column;\n  height: 100vh;\n\n  .top {\n    padding: 0 30px 20px 30px;\n  }\n\n\n  @media (max-width: 600px) {\n    .top {\n      padding: 0;\n    }\n  }\n`\n\nconst BoxStyle = styled.div`\n  padding: 20px 30px;\n  box-sizing: border-box;\n  flex: 1;\n`\n","import React, {useEffect, useState} from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\nimport {useParams} from \"react-router-dom\";\nimport {UrlHerf, UseUrlData} from \"../utils/url\";\nimport {CardCmodel} from \"../model/card_model\";\nimport {CareModel, TagModel} from \"../model/init_mode\";\nimport {useGetProject} from \"./fn/get_project\";\n\nexport const MainInnerWidget: React.FC = () => {\n    const [urlData] = UseUrlData<any>();\n    const [model, setModel] = useState<CardCmodel | any>({});\n    const {fetchProject} =useGetProject();\n    useEffect(() => {\n        if (UrlHerf.getData) {\n            setModel(UrlHerf.getData);\n        }else{\n            fetchProject(setModel);\n        }\n    }, [])\n    return (\n        <div>\n            <HeaderWidget name={model.title} {...model}/>\n            <WapStyle>\n                <Grid container spacing={4} justify={\"center\"}>\n                    <Grid item md={8} xs={11} className={'left'}>\n                        <h2>{model.description || model.introduction}</h2>\n\n                    </Grid>\n                    <Grid item md={4} xs={11} className={'right'}>\n                        <div className={'information'}>\n                            <h2>{model.title}</h2>\n                            <h3><p>Website</p> <a href={model.website}>{model.website}</a></h3>\n                            <h3><p>More</p>\n                                <div>\n                                    {model.twitter && <a href={model.twitter}>Twitter</a>}\n                                    {model.telegram &&  <a href={model.telegram}>Telegram</a>}\n                                    {model.github && <a href={model.github}>Github</a>}\n                                    {model.job && <a href={model.job}>JOB</a>}\n                                </div>\n                            </h3>\n\n                        </div>\n\n                    </Grid>\n                </Grid>\n            </WapStyle>\n\n        </div>\n    );\n}\n\n\nconst WapStyle = styled.div`\n  ${() => MaxWidget};\n  margin-top: 30px;\n\n  .left {\n    h2 {\n      font-size: 24px;\n      color: #19233c;\n      margin-bottom: 12px;\n    }\n\n    div {\n\n      p {\n        line-height: 24px;\n        color: #616b84;\n        margin-top: 9px;\n      }\n    }\n  }\n\n  .right {\n    .information {\n      background: #fff;\n      box-shadow: 0 0 15px 0 rgba(0, 0, 0, .03);\n      border-radius: 6px;\n      padding: 20px;\n\n      h2 {\n        margin-bottom: 10px;\n      }\n\n      h3 {\n\n        display: flex;\n        align-items: start;\n        font-size: 14px;\n\n        p {\n          flex-shrink: 0;\n          color: #8b93a7;\n          width: 80px;\n        }\n\n        a {\n          color: #5089ff;\n          display: block;\n          margin-bottom: 10px;\n\n        }\n      }\n    }\n  }\n`\n\nconst HeaderWidget: React.FC<{ name: string, img: string, tags: TagModel[] }> = ({\n                                                                                     tags = [],\n                                                                                     name,\n                                                                                     img\n\n                                                                                 }) => {\n    return (<HeaderStyle>\n        <div>\n            <h2>\n                <img\n                    src={\"https://medishares-cn.oss-cn-hangzhou.aliyuncs.com/polka_project/\"+ img}\n                    alt=\"\"/>\n                <span>{name}</span>\n            </h2>\n            <h3>\n                {tags.map((ev) => {\n                    return <span key={ev.name}>{ev.name}</span>\n                })}\n            </h3>\n        </div>\n\n    </HeaderStyle>);\n}\n\nconst HeaderStyle = styled.div`\n  padding: 20px;\n  background-color: white;\n\n  > div {\n    ${() => MaxWidget};\n\n    h2 {\n      display: flex;\n\n      img {\n        display: block;\n        width: 40px;\n        height: 40px;\n        border-radius: 100%;\n        margin-right: 10px;\n      }\n\n      span {\n        font-size: 28px;\n        font-weight: 900;\n        color: #19233c;\n        flex: 1 1;\n      }\n    }\n\n    h3 {\n      span {\n        background: #eff3f8;\n        padding: 5px 10px;\n        font-size: 11px;\n        margin-right: 10px;\n        border-radius: 4px;\n        font-weight: 700;\n        display: inline-block;\n        margin-top: 10px;\n      }\n    }\n  }\n\n`\n\n\nconst MaxWidget = css`\n  max-width: 900px;\n  margin: 0 auto;\n`\n","import {useCallback, useContext, useState} from \"react\";\nimport {HttpServer} from \"../../net/http_server\";\nimport {MainContext} from \"../main\";\nimport {CardCmodel} from \"../../model/card_model\";\nimport {useParams} from \"react-router-dom\";\nimport {UseUrlData} from \"../../utils/url\";\nimport {useWait} from \"../../utils/wait_fn\";\n\nexport const useGetProject = () => {\n    const [data] = UseUrlData<{id:string}>();\n    const {request} = useWait(HttpServer.getProject);\n\n    const fetchProject = useCallback(async (setModel:Function) => {\n        if(data){\n            let _data = await request(data.id);\n            setModel(_data.allProjects[0]);\n        }\n\n    }, [data])\n    return {fetchProject,};\n}\n","import React, {useCallback, useEffect, useState} from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\nimport {HashRouter as Router, Redirect, Route, Switch,} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {DrawerWidget} from \"./widget/nav\";\nimport {MainWidget} from \"./view/main\";\nimport {MainInnerWidget} from \"./view/main_inner\";\nimport {HttpServer} from './net/http_server'\nimport {BackdropProvider} from \"./provider/backdrop_provider\";\nimport {HttpStatus, useWait} from \"./utils/wait_fn\";\nimport {InitModel} from \"./model/init_mode\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n\n            },\n            position: 'relative',\n            backgroundColor: \"#e6007a\",\n        },\n        menuButton: {\n            // marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n            backgroundColor: \"#fff\",\n        },\n        content: {\n            flexGrow: 1,\n            // padding: theme.spacing(1),\n            [theme.breakpoints.down('sm')]: {\n                boxSizing: \"border-box\",\n                width: \"100vw\"\n            },\n        },\n    }),\n);\n\ninterface Props {\n\n    window?: () => Window;\n}\n\nfunction Page(props: Props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const [initData, setInitData] = useState<InitModel>({allCategories: [], allTags: []});\n    // const {request, data, status} = useWait(HttpServer.init);\n\n\n    const handelInit = useCallback(async () => {\n        let data = await HttpServer.init();\n        setInitData(data);\n    }, [])\n\n    useEffect(() => {\n        handelInit();\n    }, [])\n\n    return (\n        <Router>\n            <div className={classes.root}>\n                <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            variant=\"temporary\"\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                            open={mobileOpen}\n                            onClose={handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            ModalProps={{\n                                keepMounted: true,\n                            }}\n                        >\n                            <DrawerWidget careList={initData.allCategories}/>\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            <LogoStyle className={classes.toolbar}>\n                                Dot.Tools\n                            </LogoStyle>\n                            <DrawerWidget careList={initData.allCategories}/>\n                        </Drawer>\n                    </Hidden>\n                </nav>\n\n                <main className={classes.content}>\n\n                    <div>\n                        <Switch>\n                            <Route path=\"/:id/:q\">\n                                <MainInnerWidget/>\n                            </Route>\n                            <Route path=\"/:id\">\n                                <MainWidget appBar={classes.appBar}\n                                            handleDrawerToggle={handleDrawerToggle}\n                                            menuButton={classes.menuButton}\n                                />\n                            </Route>\n                            <Redirect to=\"/All\"/>\n                        </Switch>\n                    </div>\n\n                </main>\n            </div>\n        </Router>\n    );\n}\n\n\nexport const App: React.FC = () => {\n    return (\n        <BackdropProvider>\n            <div className=\"App\">\n                <Page/>\n            </div>\n        </BackdropProvider>\n    );\n}\n\n\nconst LogoStyle = styled.div`\n  text-align: center;\n  display: flex;\n  align-items: center;\n  color: #000;\n  justify-content: center;\n`\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}