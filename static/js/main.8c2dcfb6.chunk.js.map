{"version":3,"sources":["widget/nav.tsx","utils/url.ts","widget/img_widget.tsx","widget/main_wap.tsx","net/api.ts","net/http_server.ts","provider/backdrop_provider.tsx","utils/wait_fn.ts","view/fn/projects.ts","assets/banner.ea818942.svg","assets/more.svg","widget/search.tsx","view/list.tsx","widget/title.tsx","view/main.tsx","view/main_inner.tsx","view/fn/get_project.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DrawerWidget","careList","List","name","map","ev","StyledLink","to","className","styled","ListItem","NavLink","UseUrlData","useState","data","setData","location","useLocation","useMemo","JSON","parse","URLSearchParams","search","get","UrlHerf","this","ImgWidget","src","ImgStyle","alt","img","MainWapWidget","model","slug","useParams","title","introduction","website","tags","id","MainWapStyle","item","md","sm","xs","stringify","onClick","setDara","Grid","baseURL","axios","create","timeout","headers","transformRequest","transformResponse","interceptors","request","use","config","Promise","resolve","error","reject","response","status","code","result","url","params","baseUrl","post","put","patch","delete","HttpServer","NetAxios","skip","cate","account","HttpStatus","BackdropProvider","children","isOpen","setIsOpen","handleDismiss","useCallback","handlePresent","BackdropContext","Provider","value","onPresent","onDismiss","BackdropStyle","open","CircularProgress","color","createContext","Backdrop","useWait","backFn","start","setStatus","useContext","a","wait","success","err","failure","HeaderWidget","MainContext","tagList","tag","setTag","BannerStyle","GridStyle","container","alignItems","Tags","slice","arrDate","ButtomMenu","React","anchorEl","setAnchorEl","handleClose","indexOf","more","aria-controls","aria-haspopup","currentTarget","keepMounted","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","MenuItem","div","bannerSvg","ul","ListWidget","users","setProhibit","prohibit","fetchTag","setUsers","usersLength","setUsersLength","projects","init","req","length","allProjects","Math","ceil","_arrdata","i","push","useProjects","useEffect","loadMore","setTimeout","clearTimeout","endReached","itemContent","index","user","_itemDat","MainStyle","spacing","components","Header","Footer","style","padding","display","justifyContent","TitleWidget","TitleStyle","MainWidget","appBar","handleDrawerToggle","menuButton","setTagList","allTags","WapStyle","Hidden","smUp","implementation","AppBar","Toolbar","Typography","variant","noWrap","IconButton","aria-label","edge","BoxStyle","MainInnerWidget","setModel","fetchProject","getProject","_data","useGetProject","getData","justify","description","href","twitter","telegram","github","job","MaxWidget","HeaderStyle","css","drawerWidth","useStyles","makeStyles","theme","createStyles","root","drawer","breakpoints","up","width","flexShrink","marginLeft","toolbar","mixins","drawerPaper","backgroundColor","borderColor","content","flexGrow","down","boxSizing","Page","props","classes","useTheme","mobileOpen","setMobileOpen","allCategories","initData","setInitData","handelInit","Drawer","anchor","direction","onClose","paper","ModalProps","xsDown","LogoStyle","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c2dcfb6.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {NavLink} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {CareModel} from \"../model/init_mode\";\n\nexport const DrawerWidget: React.FC<{ careList: CareModel[] }> = ({careList}) => {\n\n    return (\n        <div>\n            <List>\n                {\n                    [{name: \"All\"}, ...careList].map((ev) => {\n                        return (\n                            <StyledLink key={ev.name} to={'/' + ev.name}>\n                                <span className={'iconfont icon-' + ev.name}/>\n                                {ev.name}\n                            </StyledLink>\n                        );\n                    })\n                }\n\n\n            </List>\n\n        </div>\n    );\n}\n\nconst ButtonItem = styled(ListItem)<{ ac: boolean }>`\n\n`\n\n//    background-color: ${({ac})=> ac ? 'rgba(0,0,0,.1)':'transitions'};\nconst StyledLink = styled(NavLink)`\n  color: #19233c;\n  opacity: 0.6;\n  font-weight: 700;\n\n  padding: 15px 20px;\n  box-sizing: border-box;\n\n\n  text-decoration: none;\n\n  position: relative;\n  display: flex;\n\n  span {\n    display: block;\n    margin-right: 20px;\n  }\n\n  &.active {\n    opacity: 1;\n    background-color: rgba(0, 0, 0, .1);\n    //&:before {\n    //  content: '';\n    //  position: absolute;\n    //  left: 24px;\n    //  top: 0;\n    //  bottom: 0;\n    //  margin:  auto 0;\n    //  width: 8px;\n    //  height: 8px;\n    //  border-radius: 50%;\n    //  background: #000;\n    //}\n  }\n\n\n  @media (max-width: 768px) {\n\n    font-size: 10px;\n\n  }\n`;\n","import {useLocation} from \"react-router-dom\";\nimport {Dispatch, SetStateAction, useMemo, useState} from \"react\";\nimport {CardCmodel} from \"../model/card_model\";\n\n\n\n\nexport function UseUrlData<S>():[S|undefined, Dispatch<SetStateAction<S | undefined>>]{\n    const [data,setData] = useState<S>();\n    const location = useLocation();\n    useMemo(()=>{\n        setData(JSON.parse(new URLSearchParams(location.search).get('data') || ''));\n    },[location.search]);\n\n\n    return [data,setData]\n}\n\n\nexport class UrlHerf{\n    static   data:CardCmodel;\n    static set setDara(ev:CardCmodel){\n        this.data = ev;\n    }\n    static get getData(){\n        return this.data;\n    }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const ImgWidget:React.FC<{src:string}> = ({src}) =>{\n    return (\n        <ImgStyle src={\"https://medishares-cn.oss-cn-hangzhou.aliyuncs.com/polka_project/\"+src} alt=\"\"/>\n    )\n}\n\n\nconst ImgStyle = styled.img`\n`\n","import React, {useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\nimport {NavLink, useParams} from \"react-router-dom\";\nimport {CardCmodel} from \"../model/card_model\";\nimport {UrlHerf} from \"../utils/url\";\nimport {ImgWidget} from \"./img_widget\";\n\nexport const MainWapWidget: React.FC<{model:CardCmodel}> = ({model}) => {\n    let  slug:any = useParams();\n    const {title,website,introduction,tags,id,img} = model;\n\n    return (\n        <MainWapStyle item md={4} sm={12} xs={12}>\n            <NavLink to={`/${slug.id}/aasd?data=${JSON.stringify({id:model.id})}`} onClick={()=>{\n                UrlHerf.setDara = model;\n            }}>\n                <div>\n                    <h2><span>{title}</span>\n                        <ImgWidget src={img} />\n\n                    </h2>\n\n                    <h3>{introduction}</h3>\n                    <h4>\n                        {\n                            tags.map((ev)=><span key={ev.name+id}>{ev.name}</span>)\n                        }\n                    </h4>\n                </div>\n            </NavLink>\n\n\n        </MainWapStyle>\n    );\n}\n\n\nconst MainWapStyle = styled(Grid)`\n        a{\n          text-decoration: none;\n          display: block;\n          height: 100%;\n          margin-bottom: 20px;\n\n        }\n   div{\n     height: 100%;\n    padding: 20px;\n    background-color: white;\n    border-radius: 5px;\n     box-sizing: border-box;\n     display: flex;\n     flex-flow: column;\n     justify-content: space-between;\n    h2 {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n\n      span {\n        font-size: 22px;\n        color: #19233c;\n        flex: 1 1;\n      }\n\n      img {\n        display: block;\n        border-radius: 100%;\n        width: 40px;\n      }\n    }\n    h3{\n      margin-top: 8px;\n      width: 100%;\n      font-size: 15px;\n      font-weight: 400;\n      flex: 1;\n      color: #8b93a7;\n      min-height: 64px;\n      line-height: 22px;\n      overflow: hidden;\n      text-overflow: ellipsis; /* 文本溢出时显示省略号来代表被修剪的文本 */\n      display: -webkit-box; /* 必须结合的属性 ，将对象作为弹性伸缩盒子模型显示 */\n      -webkit-box-orient: vertical; /* 必须结合的属性 ，设置或检索伸缩盒对象的子元素的排列方式 */\n      -webkit-line-clamp: 1; /* 文本需要显示多少行 */\n    }\n    h4{\n      span{\n        background: #eff3f8;\n        color: #8b93a7;\n        padding: 5px 10px;\n        font-size: 11px;\n        margin-right: 10px;\n        border-radius: 4px;\n        font-weight: 700;\n        display: inline-block;\n        margin-top: 10px;\n      }\n     \n    }\n  }\n  \n`\n","\n\nimport axios, {AxiosInstance} from 'axios';\n\n\n\nclass NetAxios {\n    private axios:AxiosInstance;\n    private baseURL:string;\n\n\n\n\n    constructor(baseURL:string){\n        this.baseURL = baseURL;\n        this.axios = axios.create({\n            timeout: 30000,\n            headers: {\n                 'Content-Type': 'application/json;charset=utf-8'\n            },\n            transformRequest: [\n                (data) => {\n                    return JSON.stringify(data);\n                }\n            ],\n            transformResponse: [\n                (data) => {\n                    return JSON.parse(data);\n                }\n            ]\n        });\n        this.interceptors();\n    }\n\n    /**\n     * 默认拦截器\n     */\n    interceptors() {\n        // 请求拦截器\n        this.axios.interceptors.request.use(\n            (config) => {\n                // if (localStorage.getItem('token')) {\n                //     config.headers.common['token'] = localStorage.getItem('token');\n                // }\n                return Promise.resolve(config);\n            },\n            (error) => {\n                return Promise.reject(error);\n            }\n        );\n\n        // 响应拦截器\n        this.axios.interceptors.response.use(\n            (response) => {\n                const { status, data } = response;\n                const {  code, result } = data;\n\n                if (status === 200 && code === 200) {\n                    return Promise.resolve(result);\n                }\n                // this.onPresent(React.createElement(AlertWidget, {text:'Server Error'}, null));\n                return Promise.reject(data);\n            },\n            (error) => {\n                // this.onPresent(React.createElement(AlertWidget, {text:'Server Error'}, null));\n\n                return Promise.reject(error);\n            }\n        );\n    }\n\n    get(url:string, params:any,baseUrl=true) {\n\n        return this.axios.get(`${baseUrl?this.baseURL:''}${url}`, { params: { ...params } })\n    }\n\n    post(url:string, data:any) {\n        return this.axios.post(`${this.baseURL}${url}`, data)\n    }\n\n    put(url:string, data:any) {\n        return this.axios.put(url, data)\n    }\n\n    patch(url:string, data:any) {\n        return this.axios.patch(url, data)\n    }\n\n    delete(url:string) {\n        return this.axios.delete(url)\n    }\n\n}\n\n\n// export default new NetAxios('https://tapi.nsure.network');\nexport default new NetAxios('https://admin.dot.tools/v1/');\n//  export default new NetAxios('http://localhost:3001/v1');\n","import NetAxios from './api'\n\n\n\nexport class HttpServer {\n    static account: string | null;\n\n\n    static init(): Promise<any> {\n        return NetAxios.get('/init', {});\n    }\n\n\n    static projects(data:{ skip:number, cate:string, tags?:string }): Promise<any> {\n        const {skip, cate, tags} = data;\n        return NetAxios.get('/projects', {skip, cate, tags});\n    }\n    static getProject(id:string,): Promise<any> {\n        return NetAxios.get('/get_project', {id});\n    }\n\n    static tag(cate:string): Promise<any> {\n\n        return NetAxios.get('/tag', {cate,});\n    }\n\n}\n","import React, {createContext, useCallback, useState} from \"react\";\nimport {Backdrop, CircularProgress} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\n\nexport const BackdropProvider:React.FC = ({children}) =>{\n    const [isOpen, setIsOpen] = useState(false);\n\n    const handleDismiss = useCallback(() => {\n        setIsOpen(false)\n    }, [ setIsOpen,]);\n\n    const handlePresent = useCallback(() => {\n        setIsOpen(true)\n    }, [ setIsOpen,]);\n\n    return (\n        <BackdropContext.Provider value={{isOpen,onPresent:handlePresent,onDismiss:handleDismiss}}>\n            <BackdropStyle className={\"Backdrop\"} open={isOpen} onClick={handleDismiss}>\n                <CircularProgress color=\"primary\" />\n            </BackdropStyle>\n            {children}\n        </BackdropContext.Provider>\n    );\n}\n\nexport const  BackdropContext = createContext<BackdropInterface>({\n    onPresent: () => {\n    },\n    onDismiss: () => {\n    },\n    isOpen:false\n});\n\ninterface BackdropInterface{\n    isOpen:boolean,\n    onPresent: () => void,\n    onDismiss: () => void\n}\n\n\nconst BackdropStyle = styled(Backdrop)`\n  &.MuiBackdrop-root{\n    z-index: 10000;\n\n  }\n`\n","import {useCallback, useContext, useState} from \"react\";\nimport {BackdropContext} from \"../provider/backdrop_provider\";\n\n\nexport const useWait = (backFn:Function)=>{\n    const [status,setStatus] = useState<HttpStatus>(HttpStatus.start);\n    const [data,setData] = useState<any>();\n    const {onPresent, onDismiss} = useContext(BackdropContext);\n\n\n    const request = useCallback(async (ev?:any):Promise<any> => {\n        onPresent();\n        try {\n            setStatus(HttpStatus.wait);\n            let data = await backFn(ev);\n            setStatus(HttpStatus.success);\n            setData(data);\n            onDismiss();\n\n            return data;\n        }catch (e) {\n            setData({err:e});\n            setStatus(HttpStatus.failure);\n            onDismiss();\n        }\n\n\n    },[setStatus,setData]);\n\n    return {\n        status,\n        request,\n        data\n    };\n}\n\n\nexport enum HttpStatus{\n    start,\n    wait,\n    success,\n    failure\n}\n","import {useCallback, useContext, useState} from \"react\";\nimport {HttpServer} from \"../../net/http_server\";\nimport {MainContext} from \"../main\";\nimport {CardCmodel} from \"../../model/card_model\";\nimport {useParams} from \"react-router-dom\";\nimport {useWait} from \"../../utils/wait_fn\";\n\nexport const useProjects = () => {\n    let slug: any = useParams();\n    const {tag,users,setUsers,prohibit,setProhibit} = useContext(MainContext)\n\n    const [usersLength, setUsersLength] = useState(0);\n    const {request} = useWait(HttpServer.projects);\n    const fetchTag = useCallback(async (init:boolean) => {\n        let data;\n\n        if(prohibit && !init){\n            return;\n        }\n        let req = {\n            skip:init?0:users.length, cate:slug.id, tags:tag\n        };\n        if(init){\n            data = await request(req);\n        } else{\n            data = await HttpServer.projects(req);\n        }\n        if(data.allProjects.length < 21){\n            setProhibit(true);\n        }\n\n        setUsersLength(init?data.allProjects.length:usersLength + data.allProjects.length);\n\n        let length = Math.ceil(data.allProjects.length / 3);\n        let _arrdata: any = [];\n        for (let i = 0; i < length; i++) {\n            _arrdata.push(data.allProjects.slice(i * 3, i * 3 + 3))\n        }\n        setUsers(init?_arrdata:[...users, ..._arrdata]);\n\n    }, [slug.id, tag, usersLength,users])\n    return {fetchTag,users,usersLength,setUsersLength,setUsers};\n}\n","export default __webpack_public_path__ + \"static/media/banner.ea818942.9c8b7382.svg\";","export default __webpack_public_path__ + \"static/media/more.ff7ce4af.svg\";","import React, {Component, useCallback, useContext, useEffect, useMemo, useState} from \"react\";\nimport {Button, Grid, InputBase, Menu, MenuItem, Toolbar} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport {MainContext} from \"../view/main\";\nimport bannerSvg from \"../assets/banner.ea818942.svg\"\nimport more from \"../assets/more.svg\"\nexport const HeaderWidget: React.FC = () => {\n    const {tagList, tag, setTag,} = useContext(MainContext)\n\n\n    return (\n        <div>\n            <BannerStyle>\n                    <h2>Explore <br/>the DOT Ecosystem</h2>\n                    <h4>Look for top DOT projects</h4>\n            </BannerStyle>\n            <GridStyle container alignItems={\"center\"}>\n\n                <Grid item md={12} sm={12} xs={12}>\n                    <Tags>\n                        <div>\n                            {\n                                [{name: \"All\"}, ...tagList.slice(0,4)].map((ev) => {\n                                    return (\n                                        <li onClick={() => setTag(ev.name)} className={tag === ev.name ? 'ac' : ''}\n                                            key={ev.name + 'x'}>{ev.name}</li>\n                                    );\n                                })\n                            }\n                            <ButtomMenu tag={tag}  arrDate={tagList.slice(4,-1).map((ev)=>ev.name)}/>\n\n                        </div>\n\n                    </Tags>\n                </Grid>\n\n\n            </GridStyle>\n        </div>\n    );\n}\n\n\nconst ButtomMenu:React.FC<{arrDate:string[],tag:string}> = ({arrDate,tag}) =>{\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const {setTag} = useContext(MainContext)\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (ev:string) => {\n        setAnchorEl(null);\n        if(ev){\n            setTag(ev);\n        }\n    };\n\n    return (\n        <div className={arrDate.indexOf(tag) !== -1 ? 'acB' : ''}>\n            <img src={more} className={'button'} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={(ev)=>handleClick(ev)} />\n\n\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n                open={Boolean(anchorEl)}\n                onClick={()=>handleClose('')}\n            >\n                {\n                    arrDate.map((ev)=>{\n                        return (\n                            <MenuItem key={ev} value={ev} onClick={()=>handleClose(ev)}>{ev}</MenuItem>\n                        );\n                    })\n                }\n            </Menu>\n        </div>\n    );\n}\n\n\nconst BannerStyle = styled.div`\n  height: 140px;\n  background-image: url(${bannerSvg});margin-top: 20px;\n  width: 100%;\n  background-color: #fff;\n  background-size: 100% 100%;\n  padding: 15px 40px;\n  box-sizing: border-box;\n  color: #4e3967;\n  display: block;\n  border-radius: 5px;\n  h2{\n    width: 288px;\n    font-size: 26px;\n    margin-bottom: 8px;\n    font-weight: 900;\n    color: #4e3967;\n  }\n  h4{\n    font-size: 15px;\n  }\n`\n\n\nconst GridStyle = styled(Grid)`\n  position: relative;\n  margin: 20px 0;\n\n`\n\nconst Tags = styled.ul`\n  background-color: #fff;\n  border-radius: 5px;\n  overflow-x: hidden;\n\n  div {\n    display: flex;\n\n    color: #616b84;\n\n    li {\n      border-right: 1px solid #eff3f8;\n      padding: 10px 30px;\n      font-size: 12px;\n      cursor: pointer;\n      flex: 2;\n      text-align: center;\n      &.ac {\n        background-color: #fe815f;\n        color: #fff;\n      }\n    }\n    .button{\n      color: #616b84;\n      padding: 10px 20px;\n      display: flex;\n      line-height: 1;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .acB{\n      background-color: #fe815f;\n      color: #fff;\n    }\n    >{\n      min-width: 40px;\n    }\n  }\n\n  \n\n  @media (max-width: 600.95px) {\n    >div {\n      overflow-x: auto;\n      flex-wrap: nowrap;\n    }\n  }\n\n`\n\nconst SearchStyle = styled(Grid)`\n  padding: 0 10px;\n  box-sizing: border-box;\n\n  .search {\n    border: 1px solid rgba(0, 0, 0, .18);\n    display: flex;\n    align-items: center;\n    padding: 0 10px;\n    overflow-x: hidden;\n\n    .MuiSvgIcon-root {\n      color: #e6007a;\n    }\n\n    .MuiInputBase-root {\n      font-size: 14px;\n    }\n  }\n`\n","import React, {useCallback, useContext, useEffect, useMemo, useState} from \"react\";\nimport {Virtuoso} from \"react-virtuoso\";\nimport styled from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\nimport {MainWapWidget} from \"../widget/main_wap\";\nimport {useParams} from \"react-router-dom\";\nimport {MainContext} from \"./main\";\nimport {HttpServer} from \"../net/http_server\";\nimport {CardCmodel} from \"../model/card_model\";\nimport {ItemProps} from \"react-virtuoso/dist/interfaces\";\nimport {useProjects} from \"./fn/projects\";\nimport {HeaderWidget} from \"../widget/search\";\n\n\nexport const ListWidget = () => {\n\n    let slug: any = useParams();\n    const {tag, users,setProhibit,prohibit} = useContext(MainContext)\n\n    const {fetchTag} = useProjects();\n    useEffect(() => {\n        setProhibit(false);\n        fetchTag(true);\n    }, [tag, slug.id]);\n\n\n    const loadMore = useCallback(() => {\n\n        return setTimeout(() => {\n            fetchTag(false);\n        }, 200)\n    }, [users])\n\n\n    useEffect(() => {\n        const timeout = loadMore()\n        return () => clearTimeout(timeout)\n    }, [])\n\n\n    return (\n\n        <Virtuoso\n\n            data={users}\n            endReached={loadMore}\n\n            itemContent={(index: any, user: any) => {\n                let _itemDat: CardCmodel[] = user;\n                return (<MainStyle container spacing={4}>\n                    {\n                        _itemDat.map((ev) => {\n                            return <MainWapWidget key={ev.id} model={ev}/>;\n                        })\n                    }\n                </MainStyle>)\n            }}\n\n            components={{\n\n                Header: ()=>{\n                    return <HeaderWidget />\n                },\n                Footer: () => {\n                    return (\n                        <div\n                            style={{\n                                padding: '2rem',\n                                display: 'flex',\n                                justifyContent: 'center',\n                            }}\n                        >\n                            {prohibit?\"\":\"Loading...\"}\n                        </div>\n                    )\n                }\n            }}\n        />\n\n    )\n}\n\n\nconst MainStyle = styled(Grid)`\n\n\n`\n","import styled from \"styled-components\";\nimport React from \"react\";\n\nexport const TitleWidget:React.FC = () =>{\n    return (\n        <TitleStyle>\n            Project List\n        </TitleStyle>\n    );\n}\n\nconst TitleStyle = styled.div`\n  font-size: 24px;\n  font-weight: 900;\n  color: #19233c;\n  line-height: 29px;\n  padding: 15px 20px;\n  span{\n    font-size: 14px;\n    color: #616b84;\n    line-height: 17px;\n    margin-left: 10px;\n  \n  }\n`\n","import React, {createContext, useCallback, useEffect, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {createStyles, fade, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Grid, InputBase, Toolbar} from \"@material-ui/core\";\nimport {HeaderWidget} from \"../widget/search\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {MainWapWidget} from \"../widget/main_wap\";\nimport {useParams} from \"react-router-dom\";\nimport {ListWidget} from \"./list\";\nimport {HttpServer} from \"../net/http_server\";\nimport {InitModel, TagModel} from \"../model/init_mode\";\nimport {CardCmodel} from \"../model/card_model\";\nimport {TitleWidget} from \"../widget/title\";\n\nexport const MainWidget: React.FC<{ appBar: any, handleDrawerToggle: any, menuButton: any }> = ({\n                                                                                                    appBar,\n                                                                                                    handleDrawerToggle,\n                                                                                                    menuButton\n                                                                                                }) => {\n    let slug: any = useParams();\n\n\n    const [tagList, setTagList] = useState<TagModel[]>([]);\n    const [tag, setTag] = useState('All');\n    const [prohibit, setProhibit] = useState(false);\n    const [users, setUsers] = useState<CardCmodel[]>([]);\n\n    const fetchTag = useCallback(async () => {\n        let data = await HttpServer.tag(slug.id);\n        setTag(\"All\");\n        if (data && data.allTags){\n            setTagList(data.allTags);\n\n        }\n    }, [slug.id,setTag])\n\n\n    useEffect(() => {\n        fetchTag();\n    }, [slug.id]);\n\n\n    return (\n      <MainContext.Provider value={{\n          tag,\n          setTag,\n          users,\n          setUsers,\n          tagList,\n          prohibit,\n          setProhibit\n      }}>\n          <WapStyle>\n              <div className={'top'}>\n                  <Hidden smUp implementation=\"css\">\n                      <AppBar className={appBar}>\n                          <Toolbar style={{justifyContent: 'space-between'}}>\n                              <Typography variant=\"h6\" noWrap>\n                                  Dot.Tools\n                              </Typography>\n                              <IconButton\n                                  color=\"inherit\"\n                                  aria-label=\"open drawer\"\n                                  edge=\"start\"\n                                  onClick={handleDrawerToggle}\n                                  className={menuButton}\n                              ><MenuIcon/>\n                              </IconButton>\n                          </Toolbar>\n                      </AppBar>\n                  </Hidden>\n                  <TitleWidget />\n                  {/*<HeaderWidget />*/}\n              </div>\n\n              <BoxStyle>\n                  <ListWidget/>\n              </BoxStyle>\n\n          </WapStyle>\n      </MainContext.Provider>\n    );\n}\n\nexport const  MainContext = createContext<MainInterface>({\n    setTag: () => null,\n    setUsers: () => null,\n    tag:\"All\",\n    tagList:[],\n    users:[],\n    setProhibit:() => null,\n    prohibit:false,\n});\n\ninterface MainInterface{\n    tag:string,\n    setTag: Function,\n    tagList:TagModel[],\n    users:CardCmodel[],\n    setUsers:Function,\n    prohibit:boolean,\n    setProhibit:Function\n}\n\n\nconst WapStyle = styled.div`\n  position: relative;\n  display: flex;\n  flex-flow: column;\n  height: 100vh;\n\n  .top {\n    background: hsla(0,0%,100%,.8);\n    box-shadow: 0 0 15px 0 rgba(0,0,0,.03);\n  }\n\n\n  @media (max-width: 600px) {\n    .top {\n    }\n  }\n`\n\nconst BoxStyle = styled.div`\n  padding: 0 20px;\n  box-sizing: border-box;\n  max-width: 1000px;\n  flex: 1;\n  margin: 0 auto;\n  width: 100%;\n  >div{\n    overflow: hidden;\n   >div{\n     //padding-top: 20px;\n   } \n  }\n`\n","import React, {useEffect, useState} from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {Grid} from \"@material-ui/core\";\nimport {useParams} from \"react-router-dom\";\nimport {UrlHerf, UseUrlData} from \"../utils/url\";\nimport {CardCmodel} from \"../model/card_model\";\nimport {CareModel, TagModel} from \"../model/init_mode\";\nimport {useGetProject} from \"./fn/get_project\";\n\nexport const MainInnerWidget: React.FC = () => {\n    const [urlData] = UseUrlData<any>();\n    const [model, setModel] = useState<CardCmodel | any>({});\n    const {fetchProject} =useGetProject();\n    useEffect(() => {\n        if (UrlHerf.getData) {\n            setModel(UrlHerf.getData);\n        }else{\n            fetchProject(setModel);\n        }\n    }, [])\n    return (\n        <div>\n            <HeaderWidget name={model.title} {...model}/>\n            <WapStyle>\n                <Grid container spacing={4} justify={\"center\"}>\n                    <Grid item md={8} xs={11} className={'left'}>\n                        <h2>{model.introduction}</h2>\n                        <div>\n                            <p>{ model.description}</p>\n                        </div>\n                    </Grid>\n                    <Grid item md={4} xs={11} className={'right'}>\n                        <div className={'information'}>\n                            <h2>{model.title}</h2>\n                            <h3><p>Website</p> <a href={model.website}>{model.website}</a></h3>\n                            <h3><p>More</p>\n                                <div>\n                                    {model.twitter && <a href={model.twitter}>Twitter</a>}\n                                    {model.telegram &&  <a href={model.telegram}>Telegram</a>}\n                                    {model.github && <a href={model.github}>Github</a>}\n                                    {model.job && <a href={model.job}>JOB</a>}\n                                </div>\n                            </h3>\n\n                        </div>\n\n                    </Grid>\n                </Grid>\n            </WapStyle>\n\n        </div>\n    );\n}\n\n\nconst WapStyle = styled.div`\n  ${() => MaxWidget};\n  margin-top: 30px;\n\n  .left {\n    h2 {\n      font-size: 24px;\n      color: #19233c;\n      margin-bottom: 12px;\n    }\n\n    div {\n\n      p {\n        line-height: 24px;\n        color: #616b84;\n        margin-top: 9px;\n      }\n    }\n  }\n\n  .right {\n    .information {\n      background: #fff;\n      box-shadow: 0 0 15px 0 rgba(0, 0, 0, .03);\n      border-radius: 6px;\n      padding: 20px;\n\n      h2 {\n        margin-bottom: 10px;\n      }\n\n      h3 {\n\n        display: flex;\n        align-items: start;\n        font-size: 14px;\n\n        p {\n          flex-shrink: 0;\n          color: #8b93a7;\n          width: 80px;\n        }\n\n        a {\n          color: #5089ff;\n          display: block;\n          margin-bottom: 10px;\n\n        }\n      }\n    }\n  }\n`\n\nconst HeaderWidget: React.FC<{ name: string, img: string, tags: TagModel[] }> = ({\n                                                                                     tags = [],\n                                                                                     name,\n                                                                                     img\n\n                                                                                 }) => {\n    return (<HeaderStyle>\n        <div>\n            <h2>\n                <img\n                    src={\"https://medishares-cn.oss-cn-hangzhou.aliyuncs.com/polka_project/\"+ img}\n                    alt=\"\"/>\n                <span>{name}</span>\n            </h2>\n            <h3>\n                {tags.map((ev) => {\n                    return <span key={ev.name}>{ev.name}</span>\n                })}\n            </h3>\n        </div>\n\n    </HeaderStyle>);\n}\n\nconst HeaderStyle = styled.div`\n  padding: 20px;\n  background-color: white;\n\n  > div {\n    ${() => MaxWidget};\n\n    h2 {\n      display: flex;\n\n      img {\n        display: block;\n        width: 40px;\n        height: 40px;\n        border-radius: 100%;\n        margin-right: 10px;\n      }\n\n      span {\n        font-size: 28px;\n        font-weight: 900;\n        color: #19233c;\n        flex: 1 1;\n      }\n    }\n\n    h3 {\n      span {\n        background: #eff3f8;\n        padding: 5px 10px;\n        font-size: 11px;\n        margin-right: 10px;\n        border-radius: 4px;\n        font-weight: 700;\n        display: inline-block;\n        margin-top: 10px;\n      }\n    }\n  }\n\n`\n\n\nconst MaxWidget = css`\n  max-width: 900px;\n  margin: 0 auto;\n`\n","import {useCallback, useContext, useState} from \"react\";\nimport {HttpServer} from \"../../net/http_server\";\n\nimport {UseUrlData} from \"../../utils/url\";\nimport {useWait} from \"../../utils/wait_fn\";\n\nexport const useGetProject = () => {\n    const [data] = UseUrlData<{id:string}>();\n    const {request} = useWait(HttpServer.getProject);\n\n    const fetchProject = useCallback(async (setModel:Function) => {\n        if(data){\n            let _data = await request(data.id);\n            setModel(_data.allProjects[0]);\n        }\n\n    }, [data])\n    return {fetchProject,};\n}\n","import React, {useCallback, useEffect, useState} from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\nimport {HashRouter as Router, Redirect, Route, Switch,} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {DrawerWidget} from \"./widget/nav\";\nimport {MainWidget} from \"./view/main\";\nimport {MainInnerWidget} from \"./view/main_inner\";\nimport {HttpServer} from './net/http_server'\nimport {BackdropProvider} from \"./provider/backdrop_provider\";\nimport {InitModel} from \"./model/init_mode\";\nimport 'react-dropdown/style.css';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n\n            },\n            position: 'relative',\n            backgroundColor: \"#e6007a\",\n        },\n        menuButton: {\n            // marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n            backgroundColor: \"#fff\",\n            borderColor:\"#fff\"\n        },\n        content: {\n            flexGrow: 1,\n            // padding: theme.spacing(1),\n            [theme.breakpoints.down('sm')]: {\n                boxSizing: \"border-box\",\n                width: \"100vw\"\n            },\n        },\n    }),\n);\n\ninterface Props {\n\n    window?: () => Window;\n}\n\nfunction Page(props: Props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const [initData, setInitData] = useState<InitModel>({allCategories: [], allTags: []});\n    // const {request, data, status} = useWait(HttpServer.init);\n\n\n    const handelInit = useCallback(async () => {\n        let data = await HttpServer.init();\n        setInitData(data);\n    }, [])\n\n    useEffect(() => {\n        handelInit();\n    }, [])\n\n    return (\n        <Router>\n            <div className={classes.root}>\n                <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                    <Hidden smUp implementation=\"css\">\n                        <Drawer\n                            variant=\"temporary\"\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                            open={mobileOpen}\n                            onClose={handleDrawerToggle}\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            ModalProps={{\n                                keepMounted: true,\n                            }}\n                        >\n                            <DrawerWidget careList={initData.allCategories}/>\n                        </Drawer>\n                    </Hidden>\n                    <Hidden xsDown implementation=\"css\">\n                        <Drawer\n                            classes={{\n                                paper: classes.drawerPaper,\n                            }}\n                            variant=\"permanent\"\n                            open\n                        >\n                            <LogoStyle className={classes.toolbar}>\n                                Dot.Tools\n                            </LogoStyle>\n                            <DrawerWidget careList={initData.allCategories}/>\n                        </Drawer>\n                    </Hidden>\n                </nav>\n\n                <main className={classes.content}>\n\n                    <div>\n                        <Switch>\n                            <Route path=\"/:id/:q\">\n                                <MainInnerWidget/>\n                            </Route>\n                            <Route path=\"/:id\">\n                                <MainWidget appBar={classes.appBar}\n                                            handleDrawerToggle={handleDrawerToggle}\n                                            menuButton={classes.menuButton}\n                                />\n                            </Route>\n                            <Redirect to=\"/All\"/>\n                        </Switch>\n                    </div>\n\n                </main>\n            </div>\n        </Router>\n    );\n}\n\n\nexport const App: React.FC = () => {\n    return (\n        <BackdropProvider>\n            <div className=\"App\">\n                <Page/>\n            </div>\n        </BackdropProvider>\n    );\n}\n\n\nconst LogoStyle = styled.div`\n  text-align: center;\n  display: flex;\n  align-items: center;\n  color: #000;\n  justify-content: center;\n`\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}